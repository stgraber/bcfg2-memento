# This file is managed by Bcfg2. Any local change will be lost.
{% python
    # Import the bcfg2_repo module
    import os
    import sys
    sys.path.insert(0, os.path.join(repo, "lib"))

    from bcfg2_repo import config

    # Load the config
    conf = config.get_config_section(repo, metadata, "networking",
                                     "ipsec.conf")

    if not conf['peers']:
        conf['peers'] = []
    if not isinstance(conf['peers'], list):
        conf['peers'] = [conf['peers']]

    # Generate the list of zones and forward_zones overrides
    peers = []
    for peer_name in conf['peers']:
        default = {}
        peer = config.get_config_section(repo, metadata, "networking",
                                         "ipsec_peer_%s" % peer_name)

        if peer['base']:
            default = config.get_config_section(repo, metadata, "networking",
                                                "ipsec_peer_%s" % peer['base'])

        peer['name'] = peer_name

        for key in ("leftkey", "left", "right"):
            if key not in peer:
                peer[key] = default[key]

        peers.append(peer)

    entries = []
    for peer in peers:
        entry = "%s %s : RSA %s" % (peer['left'], peer['right'],
                                    peer['leftkey'])
        if not entry in entries:
            entries.append(entry)
%}\
{% for entry in entries %}\
${entry}
{% end %}\
