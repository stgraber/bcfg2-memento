%%% This file is managed by Bcfg2. Any local change will be lost.
{% python
    # Import the bcfg2_repo module
    import os
    import sys
    sys.path.insert(0, os.path.join(repo, "lib"))

    from bcfg2_repo import config, probes

    # Load the config
    conf = config.get_config_section(repo, metadata, "ejabberd",
                                     "ejabberd.cfg")


    if not conf['ldap_servers']:
        conf['extra_conf'] = []
    elif not isinstance(conf['ldap_servers'], list):
        conf['ldap_servers'] = [conf['ldap_servers']]
    ldap_servers = str(conf['ldap_servers']).replace("'", '"')
%}\

%%
%% Override global options (shared by all ejabberd nodes in a cluster).
%%
override_global.

%%
%% Override local options (specific for this particular ejabberd node).
%%
override_local.

%%
%% Remove the Access Control Lists before new ones are added.
%%
override_acls.

%% Admin user
{acl, admin, {user, "${conf.admin}", "${conf.fqdn}"}}.

%% Hostname
{hosts, ["${conf.fqdn}"]}.


%%%   =========
%%%   DEBUGGING

%%
%% loglevel: Verbosity of log files generated by ejabberd.
%% 0: No ejabberd log at all (not recommended)
%% 1: Critical
%% 2: Error
%% 3: Warning
%% 4: Info
%% 5: Debug
%%
{loglevel, 2}.

%%
%% watchdog_admins: If an ejabberd process consumes too much memory,
%% send live notifications to those Jabber accounts.
%%
{watchdog_admins, ["${conf.admin}@${conf.fqdn}"]}.


%%%   ===============
%%%   LISTENING PORTS

%%
%% listen: Which ports will ejabberd listen, which service handles it
%% and what options to start it with.
%%
{listen,
 [
  {5222, ejabberd_c2s, [
            inet6,
            {access, c2s},
            {shaper, c2s_shaper},
            {max_stanza_size, 65536},
            starttls, {certfile, "/etc/ejabberd/ejabberd.pem"}
               ]},

  {5269, ejabberd_s2s_in, [
               inet6,
               {shaper, s2s_shaper},
               {max_stanza_size, 131072}
              ]},

  {5280, ejabberd_http, [
             inet6,
             http_poll,
             web_admin
            ]}

 ]}.

%%
%% s2s_use_starttls: Enable STARTTLS + Dialback for S2S connections.
%% Allowed values are: true or false.
%% You must specify a certificate file.
%%
{s2s_use_starttls, true}.

%%
%% s2s_certfile: Specify a certificate file.
%%
{s2s_certfile, "/etc/ejabberd/ejabberd.pem"}.


%%%   ==============
%%%   AUTHENTICATION

{% if "ejabberd-ldap" in metadata.groups %}\
%%
%% Authentication using LDAP
%%
{auth_method, ldap}.

%% List of LDAP servers:
{ldap_servers, ${ldap_servers}}.

%% Encryption of connection to LDAP servers (LDAPS):
{ldap_encrypt, none}.

%% Port connect to LDAP server:
{ldap_port, 389}.

%% LDAP manager:
{ldap_rootdn, "${conf.ldap_rootdn}"}.

%% Password to LDAP manager:
{ldap_password, "${conf.ldap_password}"}.

%% Search base of LDAP directory:
{ldap_base, "${conf.ldap_base}"}.

%% LDAP attribute that holds user ID:
{ldap_uids, [{"${conf.ldap_uid_attr}"}]}.

%% LDAP filter:
{ldap_filter, "(objectClass=user)"}.
{% end %}\

%%%   ===============
%%%   TRAFFIC SHAPERS

%%
%% The "normal" shaper limits traffic speed to 1.000 B/s
%%
{shaper, normal, {maxrate, 1000}}.

%%
%% The "fast" shaper limits traffic speed to 50.000 B/s
%%
{shaper, fast, {maxrate, 50000}}.


%%%   ====================
%%%   ACCESS CONTROL LISTS

%%
%% Local users: don't modify this line.
%%
{acl, local, {user_regexp, ""}}.


%%%   ============
%%%   ACCESS RULES

%% Define the maximum number of time a single user is allowed to connect:
{access, max_user_sessions, [{10, all}]}.

%% This rule allows access only for local users:
{access, local, [{allow, local}]}.

%% Only non-blocked users can use c2s connections:
{access, c2s, [{deny, blocked},
           {allow, all}]}.

%% For all users except admins used "normal" shaper
{access, c2s_shaper, [{none, admin},
              {normal, all}]}.

%% For all S2S connections used "fast" shaper
{access, s2s_shaper, [{fast, all}]}.

%% Only admins can send announcement messages:
{access, announce, [{allow, admin}]}.

%% Only admins can use configuration interface:
{access, configure, [{allow, admin}]}.

%% Admins of this server are also admins of MUC service:
{access, muc_admin, [{allow, admin}]}.

%% All users are allowed to use MUC service:
{access, muc, [{allow, all}]}.

%% No username can be registered via in-band registration:
%% To enable in-band registration, replace 'deny' with 'allow'
% (note that if you remove mod_register from modules list then users will not
% be able to change their password as well as register).
% This setting is default because it's more safe.
{access, register, [{deny, all}]}.

%% Everybody can create pubsub nodes
{access, pubsub_createnode, [{allow, all}]}.


%%%   ================
%%%   DEFAULT LANGUAGE

%%
%% language: Default language used for server messages.
%%
{language, "en"}.


%%%   =======
%%%   MODULES

%%
%% Modules enabled in all ejabberd virtual hosts.
%%
{modules,
 [
  {mod_adhoc,    []},
  {mod_announce, [{access, announce}]}, % requires mod_adhoc
  {mod_caps,     []},
  {mod_configure,[]}, % requires mod_adhoc
  {mod_disco,    []},
  %%{mod_echo,   [{host, "echo.localhost"}]},
  {mod_irc,      []},
  {mod_last,     []},
  {mod_muc,      [
          %%{host, "conference.@HOST@"},
          {access, muc},
          {access_create, muc},
          {access_persistent, muc},
          {access_admin, muc_admin},
          {max_users, 500}
         ]},
  %%{mod_muc_log,[]},
  {mod_offline,  []},
  {mod_privacy,  []},
  {mod_private,  []},
  {mod_proxy65,  [
          {access, local},
          {shaper, c2s_shaper}
         ]},
  {mod_pubsub,   [ % requires mod_caps
          {access_createnode, pubsub_createnode},
          {plugins, ["default", "pep"]}
         ]},
  {mod_roster,   []},
  %%{mod_service_log,[]},
  %%{mod_shared_roster,[]},
  {mod_stats,    []},
  {mod_time,     []},
  {mod_vcard,    []},
  {mod_version,  []}
 ]}.
